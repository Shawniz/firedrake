name: Build Firedrake

on:
  # Push to master or PR
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    name: "Build Firedrake"
    # The type of runner that the job will run on
    runs-on: self-hosted
    # The docker container to use.
    container:
      image: firedrakeproject/firedrake-env:latest
    strategy:
      # Don't immediately kill real if complex fails and vice versa.
      fail-fast: false
      matrix:
        include:
         - scalar-type: real
           complex: ""
         - scalar-type: complex
           complex: --complex
    env:
      FIREDRAKE_CI_TESTS: 1
      PETSC_CONFIGURE_OPTIONS: --with-make-np=12 --download-mpich-device=ch3:sock
      OMP_NUM_THREADS: 1
      OPENBLAS_NUM_THREADS: 1
      COMPLEX: ${{ matrix.complex }}
    steps:
      - uses: actions/checkout@v2
      - name: Cleanup
        if: ${{ always() }}
        run: |
          cd ..
          rm -rf build
      - name: Build Firedrake
        run: |
          cd ..
          ./firedrake/scripts/firedrake-install $COMPLEX --venv-name build --tinyasm --disable-ssh --minimal-petsc --slepc --documentation-dependencies --install thetis --install gusto --install icepack --install irksome --install femlium --no-package-manager|| (cat firedrake-install.log && /bin/false)
      - name: Install test dependencies
        run: |
          . ../build/bin/activate
          python $(which firedrake-clean)
          python -m pip install pytest-cov pytest-timeout pytest-xdist
          python -m pip list
      - name: Test Firedrake
        run: |
          . ../build/bin/activate
          echo OMP_NUM_THREADS is $OMP_NUM_THREADS
          echo OPENBLAS_NUM_THREADS is $OPENBLAS_NUM_THREADS
          python -m pytest --durations=200 -n 12 --cov firedrake --timeout=1800 -v tests
      - name: Test pyadjoint
        if: ${{ matrix.scalar-type == 'real' }}
        run: |
          . ../build/bin/activate
          cd ../build/src/pyadjoint; python -m pytest --durations=200 -n 12 --timeout=600 -v tests/firedrake_adjoint
      - name: Cleanup
        # Belt and braces: clean up before and after the run.
        if: ${{ always() }}
        run: |
          cd ..
          rm -rf build
  conda_build:
    name: "Use Conda to install Firedrake"
    # TODO: remove before final commit
    # if: ${{ github.ref == 'refs/heads/master' }}
    # The type of runner that the job will run on
    runs-on: self-hosted
    # The docker container to use.
    container:
      image: firedrakeproject/firedrake-env:latest
    strategy:
      # Don't immediately kill real if complex fails and vice versa.
      fail-fast: false
    env:
      FIREDRAKE_CI_TESTS: 1
      PETSC_CONFIGURE_OPTIONS: --with-make-np=12 --download-mpich-device=ch3:sock
      OMP_NUM_THREADS: 1
      OPENBLAS_NUM_THREADS: 1
      COMPLEX: ${{ matrix.complex }}
    steps:
      - uses: actions/checkout@v2
      - name: Cleanup
        if: ${{ always() }}
        run: |
          cd ..
          rm -rf build
      - name: Download and install Anaconda
        run: |
          cd ..
          curl -L https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh -o miniconda.sh
          bash miniconda.sh -b -p /home/firedrake/conda
          eval "$(/home/firedrake/conda/bin/conda shell.bash hook)"
          conda init
          rm miniconda.sh
      - name: Build Firedrake
        run: |
          cd ..
          eval "$(/home/firedrake/conda/bin/conda shell.bash hook)"
          (bash ./firedrake/scripts/firedrake-install-conda) || (cat firedrake-install.log && /bin/false)
      - name: Install test dependencies
        run: |
          eval "$(/home/firedrake/conda/bin/conda shell.bash hook)"
          conda activate firedrake
          python $(which firedrake-clean)
          # TODO:
          # conda install pytest-cov pytest-timeout pytest-xdist
          conda list
      - name: Smoke Test Firedrake
        run: |
          eval "$(/home/firedrake/conda/bin/conda shell.bash hook)"
          conda activate firedrake
          echo OMP_NUM_THREADS is $OMP_NUM_THREADS
          echo OPENBLAS_NUM_THREADS is $OPENBLAS_NUM_THREADS
          cd $VIRTUAL_ENV/src/firedrake
          pytest -v tests/regression/ -k "poisson_strong or stokes_mini or dg_advection"
          # TODO:
          # pytest -n 4 -v --timeout=1800 tests/regression/ -k "poisson_strong or stokes_mini or dg_advection"
      - name: Cleanup
        # Belt and braces: clean up before and after the run.
        if: ${{ always() }}
        run: |
          cd ..
          rm -rf build conda .conda
  docker_env:
    name: "Build Docker environment container"
    # The type of runner that the job will run on
    needs: build
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push firedrake-env
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/Dockerfile.env
          tags: firedrakeproject/firedrake-env:latest
  docker_vanilla:
    name: "Build Docker vanilla container"
    # The type of runner that the job will run on
    needs: docker_env
    runs-on: self-hosted
    env:
      PETSC_CONFIGURE_OPTIONS: --with-make-np=12 --download-mpich-device=ch3:sock

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push firedrake-vanilla
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          build-args: PETSC_CONFIGURE_OPTIONS
          file: docker/Dockerfile.vanilla
          tags: firedrakeproject/firedrake-vanilla:latest
  docker_firedrake:
    name: "Build full Firedrake Docker container"
    # The type of runner that the job will run on
    needs: docker_vanilla
    runs-on: self-hosted
    env:
      PETSC_CONFIGURE_OPTIONS: --with-make-np=12 --download-mpich-device=ch3:sock

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push firedrake
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          build-args: PETSC_CONFIGURE_OPTIONS
          file: docker/Dockerfile.firedrake
          tags: firedrakeproject/firedrake:latest
  docker_jupyter:
    name: "Build tutorial notebooks Docker container"
    # The type of runner that the job will run on
    needs: docker_firedrake
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push firedrake
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          build-args: PETSC_CONFIGURE_OPTIONS
          file: docker/Dockerfile.jupyter
          tags: firedrakeproject/firedrake-notebooks:latest
  docker_complex:
    name: "Build Docker complex container"
    # The type of runner that the job will run on
    needs: docker_env
    runs-on: self-hosted
    env:
      PETSC_CONFIGURE_OPTIONS: --with-make-np=12 --download-mpich-device=ch3:sock

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push firedrake-complex
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          build-args: PETSC_CONFIGURE_OPTIONS
          file: docker/Dockerfile.complex
          tags: firedrakeproject/firedrake-complex:latest
