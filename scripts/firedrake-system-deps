#!/usr/bin/env python3


import argparse
import platform
import subprocess


parser = argparse.ArgumentParser()
parser.add_argument("--package-manager", choices=["apt", "homebrew"], required=False)
args = parser.parse_args()

if args.package_manager is None:
    # try to sniff the right package manager to use
    system = platform.system()
    if system == "Linux":
        try:
            subprocess.run(["apt", "--version"], capture_output=True)
            package_manager = "apt"
        except FileNotFoundError:
            raise RuntimeError(
                f"System detected as running Linux but command 'apt' is not recognised, "
                "please install Firedrake dependencies manually"
            )
    elif system == "Darwin":
        package_manager = "homebrew"
    else:
        raise RuntimeError(
            f"System {system} is not recognised, please install Firedrake "
            "dependencies manually"
        )
else:
    package_manager = args.package_manager

if package_manager == "apt":
    sys_deps = [
        "bison",
        "build-essential",
        "fftw-dev",
        "git",
        "hwloc",
        "libhdf5-openmpi-dev",
        "libhypre-dev",
        "libmumps-dev",
        "libopenmpi-dev",
        "libpnetcdf-dev",
        "libscalapack-mpi-dev",
        "libsuitesparse-dev",
        "libsuperlu-dist-dev",
        "metis",
        "ninja-build",
        "pkg-config",
        "ptscotch",
        "python3-dev",
        "python3-pip",
    ]
else:
    # TODO: Missing a lot of packages here
    assert package_manager == "homebrew"
    sys_deps = [
        "autoconf",
        "automake",
        "boost",
        "gcc",
        "libtool",
        "make",
        "pkg-config",
        "cmake",
        "ninja",
        "openblas",
        "python",
        "python-setuptools"
    ]

print(" ".join(sys_deps))
